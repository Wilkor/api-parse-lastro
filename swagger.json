{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Integrações .parse()",
    "description": "Sistema desenvolvido para otimizar processos de construção de chatbot"
  },
  "host": "pontoparse.herokuapp.com",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "contract": {
                  "example": "any"
                },
                "system": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/notification/brota-hook": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/ticket": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/carteiras": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "header",
            "type": "string"
          },
          {
            "name": "password",
            "in": "header",
            "type": "string"
          },
          {
            "name": "url",
            "in": "header",
            "type": "string"
          },
          {
            "name": "format",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "idpatrimonio",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/messages": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/lifecyclestage/{email}/{hapikey}": {
      "get": {
        "tags": [
          "HUBSPOT"
        ],
        "description": "Endpoint para obter ciclo de vida de lead",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hapikey",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/leads": {
      "post": {
        "tags": [
          "KUROLE"
        ],
        "description": "Endpoint para obter leads do fluxo do builder",
        "parameters": [
          {
            "name": "identifier",
            "in": "header",
            "type": "string"
          },
          {
            "name": "acesskey",
            "in": "header",
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/boletos": {
      "post": {
        "tags": [
          "KUROLE"
        ],
        "description": "Endpoint para obter leads do fluxo do builder",
        "parameters": [
          {
            "name": "dominio",
            "in": "header",
            "type": "string"
          },
          {
            "name": "lojaid",
            "in": "header",
            "type": "string"
          },
          {
            "name": "idcliente",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/mk/integration/menu": {
      "get": {
        "tags": [
          "MKSOLUTION"
        ],
        "description": "Endpoint para obter um menu.",
        "parameters": [
          {
            "name": "accountname",
            "in": "header",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "codigocliente",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mk/integration/details/{id}": {
      "get": {
        "tags": [
          "MKSOLUTION"
        ],
        "description": "Endpoint para obter detalhes de um item de menu",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountname",
            "in": "header",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mk/integration/codebar/{id}": {
      "get": {
        "tags": [
          "MKSOLUTION"
        ],
        "description": "Endpoint para obter um código de barras",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountname",
            "in": "header",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mk/integration/documento/pdf/{id}": {
      "get": {
        "tags": [
          "MKSOLUTION"
        ],
        "description": "Endpoint para obter um documento pdf.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountname",
            "in": "header",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/mk/integration/contratos": {
      "post": {
        "tags": [
          "MKSOLUTION"
        ],
        "description": "Endpoint para obter lista de contratos de um cliente",
        "parameters": [
          {
            "name": "accountname",
            "in": "header",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "password",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "contratos": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ticket/{ticketId}": {
      "patch": {
        "tags": [
          "MOVIDESK"
        ],
        "description": "Endpoint atualizar um ticket no movidesk",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "email",
            "in": "header",
            "type": "string"
          },
          {
            "name": "sequencial",
            "in": "header",
            "type": "string"
          },
          {
            "name": "date",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "contexto": {
                  "example": "any"
                },
                "ticket": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/ticket/{ticketId}/{token}": {
      "get": {
        "tags": [
          "MOVIDESK"
        ],
        "description": "Endpoint para obter um ticket no movidesk",
        "parameters": [
          {
            "name": "ticketId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/attendant": {
      "post": {
        "tags": [
          "NoxGR"
        ],
        "description": "Teste NoxGR",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/organization/{id}": {
      "get": {
        "tags": [
          "RD STATION CRM"
        ],
        "description": "Endpoint para obter uma organização",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "RD STATION CRM"
        ],
        "description": "Endpoint para obter users.",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/contact/{phone}": {
      "get": {
        "tags": [
          "RD STATION CRM"
        ],
        "description": "Endpoint para obter um contato.",
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/annotation/{orgId}/{email}": {
      "post": {
        "tags": [
          "RD STATION CRM"
        ],
        "description": "Endpoint para fazer anotações na oportunidade.",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/lead": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "payload",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cliente": {
      "get": {
        "tags": [
          "SGP"
        ],
        "description": "Consulta dados cadastrais do cliente",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "app",
            "in": "header",
            "type": "string"
          },
          {
            "name": "dominio",
            "in": "header",
            "type": "string"
          },
          {
            "name": "cpfcnpj",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/fatura": {
      "get": {
        "tags": [
          "SGP"
        ],
        "description": "Disponibiliza segunda via de fatura do cliente por contrato",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "app",
            "in": "header",
            "type": "string"
          },
          {
            "name": "dominio",
            "in": "header",
            "type": "string"
          },
          {
            "name": "contrato",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/promessa-pagamento": {
      "post": {
        "tags": [
          "SGP"
        ],
        "description": "Liberação de promessa de pagamento por contrato",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "app",
            "in": "header",
            "type": "string"
          },
          {
            "name": "dominio",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "contrato": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/template": {
      "post": {
        "tags": [
          "TAKEBLIP"
        ],
        "description": "Endpoint para obter templates",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/notification": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "hookConfig": {
                  "example": "any"
                },
                "State": {
                  "example": "any"
                },
                "OrderId": {
                  "example": "any"
                },
                "Origin": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/service": {
      "post": {
        "tags": [
          "TAKEBLIP"
        ],
        "description": "Endpoint para enviar broadcast",
        "parameters": [
          {
            "name": "identifier",
            "in": "header",
            "type": "string"
          },
          {
            "name": "accesskey",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/plugin/create": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "company": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/plugin/delete/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/plugin/health/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/plugin/update": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/tiny/integration/customer": {
      "get": {
        "tags": [
          "TINY"
        ],
        "description": "Endpoint para obter um menu.",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "formato",
            "in": "header",
            "type": "string"
          },
          {
            "name": "cpf_cnpj",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tiny/integration/orders": {
      "get": {
        "tags": [
          "TINY"
        ],
        "description": "Endpoint para obter um menu.",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "formato",
            "in": "header",
            "type": "string"
          },
          {
            "name": "cpf_cnpj",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tiny/integration/ordersbyid": {
      "get": {
        "tags": [
          "TINY"
        ],
        "description": "Endpoint para obter um menu.",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "formato",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/message": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "TRAY"
        ],
        "description": "Endpoint para consulta de pedidos",
        "parameters": [
          {
            "name": "baseurl",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/orders/statuses": {
      "get": {
        "tags": [
          "TRAY"
        ],
        "description": "Endpoint para consulta de status",
        "parameters": [
          {
            "name": "baseurl",
            "in": "header",
            "type": "string"
          },
          {
            "name": "access_token",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "TRAY"
        ],
        "description": "Endpoint para consultas de pedidos por id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseurl",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/orders/customers/{id}": {
      "get": {
        "tags": [
          "TRAY"
        ],
        "description": "Endpoint para consultas de pedidos por cliente",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "baseurl",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "type": "string"
          },
          {
            "name": "doc",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "TRAY"
        ],
        "description": "Endpoint para identificar um cliente",
        "parameters": [
          {
            "name": "baseurl",
            "in": "header",
            "type": "string"
          },
          {
            "name": "doc",
            "in": "query",
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/token": {
      "post": {
        "tags": [
          "VEXTA"
        ],
        "description": "Endpoint para obter token.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/vtex/integration/menu": {
      "get": {
        "tags": [
          "VTEX"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "accountname",
            "in": "header",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "header",
            "type": "string"
          },
          {
            "name": "appkey",
            "in": "header",
            "type": "string"
          },
          {
            "name": "apptoken",
            "in": "header",
            "type": "string"
          },
          {
            "name": "channel",
            "in": "header",
            "type": "string"
          },
          {
            "name": "doc",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/vtex/integration/details/{id}": {
      "get": {
        "tags": [
          "VTEX"
        ],
        "description": "Endpoint para obter um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountname",
            "in": "header",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "header",
            "type": "string"
          },
          {
            "name": "appkey",
            "in": "header",
            "type": "string"
          },
          {
            "name": "apptoken",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/create-qrcode": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "link": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/list": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "contract",
            "in": "query",
            "type": "string"
          },
          {
            "name": "app",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/list/{id}/{key}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/fatura/{id}/{key}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/validation": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/schedule": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "time": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/login/auth": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "usuario": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "area": {
                  "example": "any"
                },
                "perfil": {
                  "example": "any"
                },
                "senha": {
                  "example": "any"
                },
                "router": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/login/getlogin": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/login/users": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/config": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "type": "string"
          },
          {
            "name": "key",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/createbot": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "botkey": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/resources": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/set-resources": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "x-access-token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                },
                "config": {
                  "example": "any"
                },
                "guid": {
                  "example": "any"
                },
                "resourceKey": {
                  "example": "any"
                },
                "tipo": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/list/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/schedule/create": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/schedule/list/{id}/{contrato}/{fun}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contrato",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fun",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/schedule/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/schedule/campaings/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/schedule/create/config": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/schedule/list/config/{contract}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "contract",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/create/{key}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ticket",
            "in": "header",
            "type": "string"
          },
          {
            "name": "router",
            "in": "header",
            "type": "string"
          },
          {
            "name": "key",
            "in": "header",
            "type": "string"
          },
          {
            "name": "wpp",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "actions": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/health/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/config/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptoken",
            "in": "header",
            "type": "string"
          },
          {
            "name": "appkey",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptoken",
            "in": "header",
            "type": "string"
          },
          {
            "name": "appkey",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/delete/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/consultar/{id}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/simulacao": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "numeroParcelas": {
                  "example": "any"
                },
                "numeroContrato": {
                  "example": "any"
                },
                "cliente": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/simulacao/efetivar": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "numeroParcelas": {
                  "example": "any"
                },
                "numeroContrato": {
                  "example": "any"
                },
                "cliente": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/simulacao/boleto": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/lancamentos": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "identity",
            "in": "header",
            "type": "string"
          },
          {
            "name": "canal",
            "in": "header",
            "type": "string"
          },
          {
            "name": "token",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/cancel/campaigns": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}